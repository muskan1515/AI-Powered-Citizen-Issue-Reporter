Date: 2025-08-17
Contributor: Muskan Kushwah
Project: NER Models + FastAPI + Docker + Nginx

Work Summary:
1. Improved LSTM-based NER model training:
   - Added dropout layers (`dropout`, `recurrent_dropout`) for regularization.
   - Verified inference pipeline for tagging sentences word-by-word.

2. API Development:
   - Created `index.py` to handle text input and call multiple NER model endpoints in parallel.
   - Implemented response aggregation to return structured results to Node.js controller.

3. Containerization & Orchestration:
   - Dockerized all 3 models (LSTM, BiLSTM, Transformer-based).
   - Configured `docker-compose.yml` for unified service management.
   - Integrated Nginx as reverse proxy:
       * Routed all model API requests through Nginx on port 80.
       * Ensured proper load balancing and endpoint accessibility.

4. Validation:
   - Tested inference requests via Nginx → FastAPI → Models.
   - Verified consistent and parallelized responses for incoming text requests.


Date: 2025-08-18
Contributor: Muskan Kushwah
1. Backend Feature Expansion:
   feat(backend): add full authentication, complaints API, and middleware setup
   - Implemented user authentication with JWT (access/refresh tokens)
   - Added rate limiting middleware on login, signup, and reset password endpoints
   - Created controllers: authController, userController, complaintController
   - Added validators for auth and complaints (express-validator)
   - Set up routes: /api/auth, /api/complaints, /api/users
   - Added authMiddleware for JWT verification with accessToken/roles
   - Integrated global error handling, request logging, and email utility stub
   - Configured server.js with Express app, MongoDB connection, CORS, JSON parsing

Next Steps:
- Add monitoring (Prometheus/Grafana) for containerized services.
- Implement batching for high-throughput inference requests.
- Optimize model serving performance (ONNX/TensorRT if required).
